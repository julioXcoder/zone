// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Post {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  published Boolean
}

model Staff {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  password  String
  firstName String
  lastName  String
  roleId    String @db.ObjectId
}

model Student {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  password    String
  firstName   String
  lastName    String
  positionId  String[] @db.ObjectId
  programmeId String   @db.ObjectId
  role        String   @default("STUDENT")
}

model Role {
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  name RoleName @unique
}

model Position {
  id   String       @id @default(auto()) @map("_id") @db.ObjectId
  name PositionName @unique
}

enum PositionName {
  STUDENT_PRESIDENT
  CLASS_REPRESENTATIVE
}

enum RoleName {
  EXAMINATION_OFFICER
  LECTURE
}

model AcademicYear {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  name      String   @unique
}

model College {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
}

model Department {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  name      String @unique
  collegeId String @db.ObjectId
}

model Programme {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  level        String
  departmentId String @db.ObjectId
  class        String
}

model Semester {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  academicYearId String   @db.ObjectId
  createdAt      DateTime @default(now())
}

model CAResult {
  id               String @id @default(auto()) @map("_id") @db.ObjectId
  marks            Int?
  studentId        String @db.ObjectId
  componentId      String @db.ObjectId
  courseInstanceId String @db.ObjectId
}

model UEResult {
  id               String @id @default(auto()) @map("_id") @db.ObjectId
  marks            Int?
  studentId        String @db.ObjectId
  courseInstanceId String @db.ObjectId
}

model CAComponent {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  maxMarks         Int
  type             String[] @db.ObjectId
  courseInstanceId String   @db.ObjectId
}

model CAComponentType {
  id   String              @id @default(auto()) @map("_id") @db.ObjectId
  name CAComponentTypeName @unique
}

enum CAComponentTypeName {
  NORMAL
  ASSIGNMENT
}

//TODO: Add points 
model Course {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  code        String
  unit        Int
  status      String
  programmeId String @db.ObjectId
}

//TODO: Add resources 
model CourseInstance {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  courseId     String   @db.ObjectId
  semesterId   String   @db.ObjectId
  lecturerId   String   @db.ObjectId
  CAComponents String[] @db.ObjectId
}
